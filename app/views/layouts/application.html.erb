<!DOCTYPE html>
<html <% if current_user != nil %>ng-app="WebTemplate"<% end %>>
	<head>
  		<title><%= full_title(yield(:page_title)) %></title>
  		<%= stylesheet_link_tag 'application', media: 'all' %>
  		<%= javascript_include_tag 'application' %>
  		<%= csrf_meta_tags %>
  		<%= render 'layouts/shim' %>
	</head>
	<body ng-controller="GitProfileController">
        <%= render 'layouts/header' %>
    	<br/><h1 class="app-title">WEB TEMPLATE</h1><br/>
        <%= yield %>
        <%= render 'layouts/footer' %>
        <script>              
            <% if current_user != nil %>
                var current_user = "<%= current_user.username %>"
                var app = angular.module('WebTemplate', []);
                app.controller('GitProfileController', ['$scope', '$http', function($scope, $http) {
                    $http.get('https://api.github.com/users/' + current_user).
                    success(function(profileData, status) {
                        $(".github-profile").removeClass('hidden')
                        $scope.avatar = profileData.avatar_url;
                        $scope.username = profileData.login;
                        $scope.email = profileData.email || "n/a";
                        $scope.html_url = profileData.html_url;
                        $scope.date = profileData.created_at;
                        $scope.publicRepos = profileData.public_repos || "0";
                        $scope.following = profileData.following || "0";
                        $scope.followers = profileData.followers || "0";
                    }).error(function(profileData, status) {
                        $scope.avatar = "github_avatar.png";
                        $scope.username = "n/a";
                        $scope.email = "n/a";
                        $scope.html_url = "n/a";
                        $scope.date = "n/a";
                        $scope.publicRepos = "n/a";
                        $scope.following = "n/a";
                        $scope.followers = "n/a";
                        $scope.message = status;
                    });
                }]);
            <% end %> 

            function getProfile(user_name) {
                $.get('https://api.github.com/users/' + user_name, function(user){
                    var newProfile = Mustache.render($('#profile-template').html(), user);
                    $('.profile-container').prepend(newProfile);
                }).error(function(){
                    $('#error_message').text("Sorry, there\'s no Github user " + user_name);
                }).always(function(){
                    $('#user_name').val('');
                })
            };

            $('#add_profile').on('submit', function(event) {
                event.preventDefault();
                if ($('.aaaa')[0] != null) {
                    $('.aaaa').first().fadeOut(100, function() {
                        $(this).remove();
                        getProfile($('#user_name').val());
                    });
                } else {
                    getProfile($('#user_name').val());
                };
            });
        </script>
	</body>
</html>






<!-- get list of repos for a user:
https://api.github.com/users/technoweenie/repos
 -->

 <!--            // function getProfile(username) {
            //     $.get('https://api.github.com/users/' + username, function(user) {
            //         var newProfile = Mustache.render($('#profile-template').html(), user);
            //         $(".myID").prepend(user.id);
            //         $('.profile-container').prepend(newProfile);
            //     }).error(function() {
            //         alert("There is no user called " + username);
            //     }).always(function() {
            //         // $('#username').val('');
            //     })
            // }

            // function getProfile(username) {
            //     $.get('https://api.github.com/users/' + username, function(user) {
            //             var user_id = user.id;

            //     });
            // };
 -->

 <!--      
      <div class="user-session-control">
        <%= form_for(User.new, as: :user, url: session_path(:user)) do |f| %>
            <%= f.label :email %>
            <%= f.email_field :email, required: "true" %>
            <%= f.label :password %>
            <%= f.password_field :password, required: "true", autocomplete: "off" %>
            <%= f.check_box :remember_me %> 
            <%= f.label :remember_me %>
            <span class="log-in-button">
            <%= f.submit "Log in", id: "log-in" %>
            </span>
            <span class="sign-up-button">
            <%= link_to "Sign up", new_user_registration_path, class: "sign-up" %>
            </span>
            <span class="log-out-button">
          <%= link_to "Log out", destroy_user_session_path, method: :delete, class: "log-out" %>
          </span>
        <% end %>
    </div> -->



